# Step 1, import likelihood function
# Step 2, get data at new timestep
# Step 3, calculate likelihood for the data
# Step 4, shift the temporal weight vector by 1
# Step 5, update all the weights

import numpy as np
import Likelihood_gen as lg
import matplotlib.pyplot as plt

class DataThings(object):
    def __init__(self, x, y, z=0):
        self.x = x
        self.y = y
        self.z = z


def rolder(timeseries, time, window):
    length=len(timeseries)
    length = np.size(timeseries)  # length of the time series
    A = np.ones((length, length - window + 1))  # create a matrix of ones
    B = np.triu(A, 1)
    C = np.tril(A, -window)
    Proj = np.transpose(A - B - C)  # this matrix selects the sections to fourier transform
    M = np.transpose(np.kron(np.ones(length - window + 1), np.reshape(timeseries, [np.size(timeseries), 1])))
    M = np.reshape(M.ravel()[np.flatnonzero(Proj)], ( length - window + 1,window))
    M=np.mean(M,1)
    der = (M[1:length] - M[0:-1]) / (time[1] - time[0])
    return DataThings(time[0:length-window], der, M)


def main():

    # making up data
    n = 15  # number of time steps
    window=4
    randomvar = np.random.randint(1, n, 1)  # just your friendly random integer between 1 and a n
    t = np.linspace(0, 10, n)
    timeseries = np.concatenate((2 * t[0:randomvar], t[randomvar:n] * 20 -  (t[randomvar] * 20 - t[randomvar] * 2)), 0)
    timeseries = timeseries + (np.mean(timeseries) / (50 * np.random.rand(1) + 5)) * 1* np.random.randn(len(t))
    label=np.concatenate((np.zeros(randomvar), np.ones(n-randomvar)),0)
    der=rolder(timeseries, t, window)
    # making up data



    Test=[]
    Test.append({'name':'label', 'space' : label[0:n-window]})
    Test.append({'name':'der', 'space': der.y[0:n-window]})
    Test.append({'name':'y', 'space': timeseries[0:n-window]})

    space=[]
    space.append({'name':'der' , 'space' : np.linspace(np.min(der.y),np.max(der.y),40)})
    space.append({'name': 'y', 'space': np.linspace(np.min(timeseries), np.max(timeseries))})
    Space=lg.VarSpace(space)
    Data=lg.DataSpace(Test, Space)
    stuff=lg.Likelihood(Data)

main()